---
- name: "Gather package facts"
  ansible.builtin.package_facts:

- name: "Check if /home/{{ remote_host_user }}/.ssh directory exists"
  ansible.builtin.stat:
    path: "/home/{{ remote_host_user }}/.ssh"
  register: ssh_dir
  become: true
  run_once: true

- name: "Check if {{ remote_host_user }} Github SSH private key exists"
  ansible.builtin.stat:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa"
  # delegate_to: localhost
  register: ssh_key_status
  run_once: true
  become: true

- name: "[DEBUG] /home/{{ remote_host_user }}/.ssh existence"
  ansible.builtin.debug:
    msg: "/home/{{ remote_host_user }}/.ssh exists: {{ ssh_dir.stat.exists }}"

- name: "[DEBUG] /home{{ remote_host_user }}/.ssh/github_id_rsa existence"
  ansible.builtin.debug:
    msg: "/home/{{ remote_host_user }}/.ssh/github_id_rsa exists: {{ ssh_key_status.stat.exists }}"

- name: "Ensure openssh-server is installed"
  ansible.builtin.package:
    name: openssh-server
    state: present
  become: true
  when: not 'openssh-server' in ansible_facts.packages

- name: Ensure remote SSH directory exists
  file:
    path: "/home/{{ remote_host_user }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ remote_host_user }}"
    group: "{{ remote_host_user }}"
  become: true
  when: not ssh_dir.stat.exists

- name: Generate SSH key pair
  ansible.builtin.openssh_keypair:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa"
    type: rsa
    size: 4096
  run_once: true
  when: ssh_key_status.stat.exists == false
  become: true

- name: "Check if {{ remote_host_user }} Github SSH private key exists"
  ansible.builtin.stat:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa"
  # delegate_to: localhost
  register: ssh_key_status
  run_once: true
  become: true

- name: "Check if {{ remote_host_user }} Github SSH public key exists"
  ansible.builtin.stat:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa.pub"
  # delegate_to: localhost
  register: ssh_pubkey_status
  run_once: true
  become: true

- name: "Set permissions on the private key"
  ansible.builtin.file:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa"
    state: file
    mode: "0600"
    owner: "{{ remote_host_user }}"
    group: "{{ remote_host_user }}"
  become: true
  when: ssh_key_status.stat.exists == true

- name: "Set permissions on the public key"
  ansible.builtin.file:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa.pub"
    state: file
    mode: "0644"
    owner: "{{ remote_host_user }}"
    group: "{{ remote_host_user }}"
  become: true
  when: ssh_pubkey_status.stat.exists == true

- name: "Set permissions on the .ssh directory"
  ansible.builtin.file:
    path: "/home/{{ remote_host_user }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ remote_host_user }}"
    group: "{{ remote_host_user }}"
  become: true
  when: ssh_dir.stat.exists

- name: "Ensure .ssh/config exists and configure GitHub"
  ansible.builtin.lineinfile:
    path: "/home/{{ remote_host_user }}/.ssh/config"
    line: |
      Host github.com
        User git
        IdentityFile ~/.ssh/github_id_rsa
    state: present
    create: true
    owner: "{{ remote_host_user }}"
    group: "{{ remote_host_user }}"
  become: true

- name: "Re-check for existence of /home/{{ remote_host_user }}/.ssh/github_id_rsa"
  ansible.builtin.stat:
    path: "/home/{{ remote_host_user }}/.ssh/github_id_rsa"
  register: ssh_key_recheck
  become: true

- name: "[DEBUG] Check for SSH key existence after generating"
  ansible.builtin.debug:
    msg: "(post-generate) /home/{{ remote_host_user }}/.ssh/github_id_rsa exists: {{ ssh_key_recheck.stat.exists }}"

- name: "Debug public key"
  ansible.builtin.command:
    cmd: cat /home/{{ remote_host_user }}/.ssh/github_id_rsa.pub
  register: public_key
  become: true

- name: "Echo public key"
  debug:
    msg: "Public key for GitHub: {{ public_key.stdout }}"
