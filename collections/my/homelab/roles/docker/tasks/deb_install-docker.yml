---
- name: "Ensure required packages for Docker installation are installed"
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    state: present
    update_cache: true
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Add Docker's GPG key"
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
    keyring: /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Add Docker APT repository"
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    update_cache: true
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Install Docker packages"
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
    update_cache: true
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Enable and start Docker service"
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Add user {{ remote_host_user }} to Docker group"
  ansible.builtin.user:
    name: "{{ remote_host_user }}"
    group: docker
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Run newgrp docker to apply group change"
  ansible.builtin.shell: "newgrp docker"
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Verify Docker installation and show Docker version"
  ansible.builtin.command: docker version
  register: docker_version
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: "Install Docker Compose plugin"
  ansible.builtin.apt:
    name:
      - docker-compose-plugin
    state: present
    update_cache: true
  become: true
  when: (ansible_facts['os_family'] == 'Debian') and (INSTALL_COMPOSE)

- name: "Show Docker version output"
  ansible.builtin.debug:
    msg: "Docker version installed: {{ docker_version.stdout }}"
  when: ansible_facts['os_family'] == 'Debian'
