---
## This is the standard setup I do on any new machines in my homelab
#  Meant to be run after initial onboarding playbook
- name: Standard homelab setup
  hosts: all

  vars:
    ## Packages to install for Debian/RedHat distros
    debian_pkgs: "{{ common_debian_packages }}"
    redhat_pkgs: "{{ common_redhat_packages }}"

    ## Replace 'master' with 'main' (or another branch name)
    git_default_branch: "{{ git_default_branch_name }}"
    ## Git username for git config user.name
    git_user: "{{ git_user_name }}"
    ## Git email for git config user.email
    git_email: "{{ git_user_email }}"

    ## Install Docker Compose
    install_docker_compose: true

    ## User account setup
    new_user_name: "{{ setup_user_name }}"
    new_user_shell: "{{ setup_user_shell | default('/bin/bash') }}"
    allow_passwordless_sudo: "{{ setup_user_passwordless_sudo | default(false) }}"

  tasks:
    ## Gather installed package facts on all remotes
    - name: "Gather facts"
      ansible.builtin.package_facts:
        manager: auto

    ## Setup user account
    - name: Create new user
      ansible.builtin.import_role:
        name: my.homelab.user_mgmt
        tasks_from: create-user.yml

    ## Unattended upgrades on Debian hosts
    - name: Install & configure unattended-upgrades on Debian hosts
      ansible.builtin.import_role:
        name: my.homelab.onboard
        tasks_from: install-unattended-upgrades.yml
      when: ansible_facts.os_family == "Debian"

    ## Install & configure git
    - name: "Install & setup git"
      ansible.builtin.import_role:
        name: my.homelab.git

    ## Generate github_id_rsa SSH key
    - name: "Generate SSH keys"
      ansible.builtin.import_role:
        name: my.homelab.ssh
        tasks_from: generate-ssh-key.yml

    ## Install common Debian packages
    - name: "Install base packages for Debian-based distributions"
      ansible.builtin.import_role:
        name: my.homelab.base_setup
        tasks_from: deb-install-packages.yml
      when: ansible_facts.os_family == "Debian"

    ## Install common RedHat packages
    - name: "Install base packages for Redhat-based distributions"
      ansible.builtin.import_role:
        name: my.homelab.base_setup
        tasks_from: rpm-install-packages.yml
      when: ansible_facts.os_family == "RedHat"

    ## Install crontab on all hosts
    - name: "Install crontab"
      ansible.builtin.import_role:
        name: my.homelab.cron
        tasks_from: install-cron.yml

    ## Install clamAV antivirus
    - name: "Install clamAV"
      ansible.builtin.import_role:
        name: my.homelab.security.clamav
      when: ansible_facts.os_family == "Debian"

    ## Apply default clamAV configuration
    - name: "Configure clamAV"
      ansible.builtin.import_role:
        name: my.homelab.security.clamav
        tasks_from: configure_clamav.yml
      when: ansible_facts.os_family == "Debian"

    ## Apply default clamAV scan schedule
    - name: "Configure clamAV scan schedule"
      ansible.builtin.import_role:
        name: my.homelab.security.clamav
        tasks_from: configure_scans.yml
      when: ansible_facts.os_family == "Debian"

    ## Add clamAV systemd service
    - name: "Setup clamAV systemd service"
      ansible.builtin.import_role:
        name: my.homelab.security.clamav
        tasks_from: restart_clamav_systemd.yml
      when: ansible_facts.os_family == "Debian"

    ## Install fail2ban
    - name: "Install fail2ban"
      ansible.builtin.import_role:
        name: my.homelab.security.fail2ban
        tasks_from: install-fail2ban.yml

    ## Create backup of existing fail2ban configs
    - name: "Backup fail2ban configs"
      ansible.builtin.import_role:
        name: my.homelab.security.fail2ban
        tasks_from: backup-fail2ban-confs.yml

    ## Copy templated fail2ban files from Ansible to remote
    - name: "Copy templated fail2ban config files"
      ansible.builtin.import_role:
        name: my.homelab.security.fail2ban
        tasks_from: install-fail2ban-confs.yml

    ## Enable fail2ban systemd service & start
    - name: "Enable & start fail2ban"
      ansible.builtin.import_role:
        name: my.homelab.security.fail2ban
        tasks_from: enable-fail2ban.yml

    ## Install firewall on remote
    - name: "Install firewall"
      ansible.builtin.import_role:
        name: my.homelab.security.firewall
        tasks_from: install-firewall.yml

    ## Configure remote firewall
    - name: "Configure firewall"
      ansible.builtin.import_role:
        name: my.homelab.security.firewall
        tasks_from: configure-firewall.yml

    ## Restart firewall systemd service
    - name: "Restart firewall"
      ansible.builtin.import_role:
        name: my.homelab.security.firewall
        tasks_from: enable-firewall.yml

    ## Install & configure Docker
    - name: "Add Docker APT repository"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: add-apt-repository.yml

    - name: "Install Docker packages"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: install-docker-depends.yml

    - name: "Install Docker"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: install-docker.yml
    
    - name: "Install Docker Compose"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: install-docker-compose.yml
      when: install_docker_compose

    - name: "Add user to Docker group"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: add-user-to-docker-group.yml

    - name: "Enable Docker systemd service"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: enable-systemd-service.yml

    - name: "Fix UFW Docker vulnerability"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: fix-ufw-vuln.yml

    - name: "Enable Docker Bash completions"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: enable-bash-completions.yml

    - name: "Debug Docker version"
      ansible.builtin.import_role:
        name: my.homelab.docker
        tasks_from: debug-docker-version.yml

    ## Do updates and reboot if needed
    - name: "Call homelab collection's update-system role"
      ansible.builtin.import_role:
        name: my.homelab.update_system
